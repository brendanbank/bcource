# Production Docker Compose Configuration
# This file is identical to docker-compose.yml except for the ACME server

services:
  traefik:
    image: "traefik:v3.4"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"

      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"

      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # PRODUCTION: Use production Let's Encrypt server
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=brendan.bank@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    env_file: "env.production"
    ports:
      - "${HTTP_PORT:-80}:80"    # HTTP - standard port 80
      - "${HTTPS_PORT:-443}:443"  # HTTPS - standard port 443
      - "${TRAEFIK_DASHBOARD_PORT:-8080}:8080"  # Traefik dashboard
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    logging:
      driver: "loki"
      options:
        loki-url: "http://loki.bgwlan.nl:3100/loki/api/v1/push"
        loki-pipeline-stages: |
          - json:
              expressions:
                stream: stream
                attrs: attrs
                tag: attrs.tag
                level: attrs.level
                msg: log
        loki-relabel-config: |
          - action: replace
            source_labels: ['__filename__']
            target_label: 'job'
          - action: replace
            source_labels: ['container_name']
            target_label: 'container'
          - action: replace
            source_labels: ['stream']
            target_label: 'stream'
    networks:
      - web-network
    restart: unless-stopped

  bcourse:
    container_name: "bcourse"
    build: ..
    image: bcourse:latest
    env_file: "env.production"
    logging:
      driver: "loki"
      options:
        loki-url: "http://loki.bgwlan.nl:3100/loki/api/v1/push"
        loki-pipeline-stages: |
          - json:
              expressions:
                stream: stream
                attrs: attrs
                tag: attrs.tag
                level: attrs.level
                msg: log
        loki-relabel-config: |
          - action: replace
            source_labels: ['__filename__']
            target_label: 'job'
          - action: replace
            source_labels: ['container_name']
            target_label: 'container'
          - action: replace
            source_labels: ['stream']
            target_label: 'stream'
    networks:
      - web-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bcourse.rule=Host(`${TRAEFIK_HOST1:-bcourse.nl}`) || Host(`${TRAEFIK_HOST2:-www.bcourse.nl}`)"
      - "traefik.http.routers.bcourse.entrypoints=web,websecure"
      - "traefik.http.routers.bcourse.tls.certresolver=myresolver"
      - "traefik.http.services.bcourse.loadbalancer.server.port=80"
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: "bcourse-mysql"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-bcourse}
      MYSQL_USER: ${MYSQL_USER:-bcourse}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-bcoursepassword}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    env_file: "env.production"
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    networks:
      - web-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "loki"
      options:
        loki-url: "http://loki.bgwlan.nl:3100/loki/api/v1/push"
        loki-pipeline-stages: |
          - json:
              expressions:
                stream: stream
                attrs: attrs
                tag: attrs.tag
                level: attrs.level
                msg: log
        loki-relabel-config: |
          - action: replace
            source_labels: ['__filename__']
            target_label: 'job'
          - action: replace
            source_labels: ['container_name']
            target_label: 'container'
          - action: replace
            source_labels: ['stream']
            target_label: 'stream'
    command: --default-authentication-plugin=caching_sha2_password

volumes:
  mysql_data:

networks:
  web-network:
    driver: bridge 